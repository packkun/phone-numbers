import os
import re
import time
from contextlib import asynccontextmanager
from fastapi import FastAPI, Depends, HTTPException, UploadFile, File, Form, Request
from fastapi.responses import JSONResponse, HTMLResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from sqlalchemy.orm import Session
from sqlalchemy import func, text
from typing import List, Optional
import phonenumbers
from phonenumbers import NumberParseException
from database import SessionLocal, engine
from models import Base, PhoneNumber

def wait_for_db():
    """–ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    max_retries = 30
    retry_count = 0
    
    while retry_count < max_retries:
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            with engine.connect() as conn:
                conn.execute(text("SELECT 1"))
            print("Database connection successful!")
            return True
        except Exception as e:
            retry_count += 1
            print(f"Database connection failed (attempt {retry_count}/{max_retries}): {e}")
            time.sleep(2)
    
    raise Exception("Could not connect to database after maximum retries")

@asynccontextmanager
async def lifespan(app: FastAPI):
    # Startup
    print("Waiting for database...")
    wait_for_db()
    print("Creating database tables...")
    Base.metadata.create_all(bind=engine)
    print("Database tables created successfully!")
    yield
    # Shutdown
    print("Shutting down...")

app = FastAPI(
    title='Phone Numbers API',
    description="""
    ## üìû API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
    
    –°–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è, —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    
    ### üîß –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - **–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤** —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É –∏ –ª–∏–º–∏—Ç—É
    - **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤** –ø–æ –æ–¥–Ω–æ–º—É –∏–ª–∏ –º–∞—Å—Å–æ–≤–æ
    - **–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–º–µ—Ä–æ–≤** –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    - **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ** –Ω–æ–º–µ—Ä–æ–≤
    - **–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞** –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
    
    ### üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:
    - –î–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    - –ü–∞—Ä–æ–ª—å –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—Ä–æ—Å–∞
    
    ### üìã –§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤:
    - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: `^\+?[0-9]{10,15}$`
    - –ü—Ä–∏–º–µ—Ä—ã: `+79001234567`, `79001234568`, `+380501234567`
    
    ### üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
    - –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000
    - –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å —Å –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    """,
    version='1.0.0',
    contact={
        "name": "Phone Numbers System",
        "email": "admin@example.com",
    },
    license_info={
        "name": "MIT",
    },
    lifespan=lifespan
)

# –î–æ–±–∞–≤–ª—è–µ–º CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –†–µ–≥—É–ª—è—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞
PHONE_RE = re.compile(r'^\+?[0-9]{10,15}$')
# –†–µ–≥—É–ª—è—Ä–∫–∞ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞ (country code —Å –ø–ª—é—Å–æ–º, –µ—Å–ª–∏ –µ—Å—Ç—å)
PREFIX_RE = re.compile(r'^(\+?\d{1,3})')

ADMIN_PASSWORD = os.environ.get('ADMIN_PASSWORD', 'changeme')

# Dependency
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

class PhoneOut(BaseModel):
    id: int
    phone_number: str
    prefix: str
    created_at: str

    class Config:
        from_attributes = True

class PhoneListResponse(BaseModel):
    count: int
    items: List[PhoneOut]

class BulkAddResponse(BaseModel):
    added: int
    skipped: int

class PhoneAddResponse(BaseModel):
    id: int
    phone_number: str

class DeleteResponse(BaseModel):
    ok: bool

@app.get(
    '/api/v1/phones',
    summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤",
    description="""
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
    
    **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
    - `limit`: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–º–µ—Ä–æ–≤ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100, –º–∞–∫—Å–∏–º—É–º 1000)
    - `prefix`: –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É –Ω–æ–º–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, +7, +380)
    - `password`: –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π)
    
    **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
    - `count`: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
    - `items`: –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
    
    **–ü—Ä–∏–º–µ—Ä—ã:**
    - –ü–æ–ª—É—á–∏—Ç—å 50 –Ω–æ–º–µ—Ä–æ–≤: `GET /api/v1/phones?limit=50`
    - –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º +7: `GET /api/v1/phones?prefix=+7`
    - –ü–æ–ª—É—á–∏—Ç—å 10 –Ω–æ–º–µ—Ä–æ–≤ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º +380: `GET /api/v1/phones?limit=10&prefix=+380`
    """,
    response_description="–°–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤",
    response_model=PhoneListResponse,
    tags=["–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤"]
)
def get_phones(limit: int = 100, prefix: Optional[str] = None, password: Optional[str] = None, db: Session = Depends(get_db)):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
    if password and password != ADMIN_PASSWORD:
        raise HTTPException(status_code=401, detail='Unauthorized')
    
    q = db.query(PhoneNumber)
    if prefix:
        q = q.filter(PhoneNumber.prefix == prefix)
    # —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
    q = q.order_by(func.random()).limit(limit)
    items = q.all()
    return {'count': len(items), 'items': [{'id': i.id, 'phone_number': i.phone_number, 'prefix': i.prefix, 'created_at': i.created_at.isoformat() if i.created_at else None} for i in items]}


@app.post(
    '/api/v1/phones/bulk',
    summary="–ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤",
    description="""
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è.
    
    **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
    - `numbers`: –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ (–∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ = –æ–¥–∏–Ω –Ω–æ–º–µ—Ä)
    - `password`: –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    
    **–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–æ–≤:**
    - –ö–∞–∂–¥—ã–π –Ω–æ–º–µ—Ä –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: `^\+?[0-9]{10,15}$`
    - –ü—Ä–∏–º–µ—Ä—ã: `+79001234567`, `79001234568`, `+380501234567`
    
    **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
    - `added`: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
    - `skipped`: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ (–¥—É–±–ª–∏–∫–∞—Ç—ã –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)
    
    **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
    ```
    +79001234567
    +79001234568
    +380501234567
    79001234569
    ```
    """,
    response_description="–†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è",
    response_model=BulkAddResponse,
    tags=["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"]
)
def bulk_add(numbers: str = Form(...), password: str = Form(...), db: Session = Depends(get_db)):
    # numbers ‚Äî –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –ø–æ–ª–µ, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ = –Ω–æ–º–µ—Ä
    if password != ADMIN_PASSWORD:
        raise HTTPException(status_code=401, detail='Unauthorized')

    lines = [l.strip() for l in numbers.splitlines() if l.strip()]
    added = 0
    skipped = 0
    
    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏–∑ —Å–∞–º–æ–≥–æ —Ñ–∞–π–ª–∞
    unique_lines = list(dict.fromkeys(lines))  # –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫
    
    for raw in unique_lines:
        if not PHONE_RE.match(raw):
            skipped += 1
            continue
        prefix = extract_prefix(raw)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤ –ë–î
        existing = db.query(PhoneNumber).filter(PhoneNumber.phone_number == raw).first()
        if existing:
            skipped += 1
            continue
            
        # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∂–¥—ã–π –Ω–æ–º–µ—Ä –æ—Ç–¥–µ–ª—å–Ω–æ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        try:
            pn = PhoneNumber(phone_number=raw, prefix=prefix)
            db.add(pn)
            db.commit()
            added += 1
        except Exception:
            # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥—É–±–ª–∏–∫–∞—Ç), –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            db.rollback()
            skipped += 1
    
    return {'added': added, 'skipped': skipped}

@app.post(
    '/api/v1/phones/upload',
    summary="–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞",
    description="""
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ (.txt).
    
    **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
    - `file`: –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ (–∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ = –æ–¥–∏–Ω –Ω–æ–º–µ—Ä)
    - `password`: –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    
    **–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:**
    - –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª (.txt)
    - –ö–æ–¥–∏—Ä–æ–≤–∫–∞: UTF-8
    - –ö–∞–∂–¥—ã–π –Ω–æ–º–µ—Ä –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: `^\+?[0-9]{10,15}$`
    
    **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
    - `added`: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
    - `skipped`: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ (–¥—É–±–ª–∏–∫–∞—Ç—ã –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)
    
    **–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞:**
    ```
    +79001234567
    +79001234568
    +380501234567
    79001234569
    ```
    """,
    response_description="–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞",
    response_model=BulkAddResponse,
    tags=["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"]
)
def upload_txt(file: UploadFile = File(...), password: str = Form(...), db: Session = Depends(get_db)):
    if password != ADMIN_PASSWORD:
        raise HTTPException(status_code=401, detail='Unauthorized')
    content = file.file.read().decode('utf-8', errors='ignore')
    # –ü–µ—Ä–µ–ø–æ–ª—å–∑—É–µ–º bulk_add –ª–æ–≥–∏–∫—É
    return bulk_add(numbers=content, password=password, db=db)

@app.post(
    '/api/v1/phones',
    summary="–î–æ–±–∞–≤–∏—Ç—å –æ–¥–∏–Ω –Ω–æ–º–µ—Ä",
    description="""
    –î–æ–±–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    
    **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
    - `phone_number`: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    - `name`: –ò–º—è/–æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    - `password`: –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    
    **–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞:**
    - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: `^\+?[0-9]{10,15}$`
    - –ü—Ä–∏–º–µ—Ä—ã: `+79001234567`, `79001234568`, `+380501234567`
    
    **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
    - `id`: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    - `phone_number`: –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    
    **–û—à–∏–±–∫–∏:**
    - `400`: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞
    - `401`: –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å
    - `409`: –ù–æ–º–µ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–¥—É–±–ª–∏–∫–∞—Ç)
    """,
    response_description="–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
    response_model=PhoneAddResponse,
    tags=["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"]
)
def add_single(phone_number: str = Form(...), name: Optional[str] = Form(None), password: str = Form(...), db: Session = Depends(get_db)):
    if password != ADMIN_PASSWORD:
        raise HTTPException(status_code=401, detail='Unauthorized')
    if not PHONE_RE.match(phone_number):
        raise HTTPException(status_code=400, detail='Invalid phone format')
    prefix = extract_prefix(phone_number)
    existing = db.query(PhoneNumber).filter(PhoneNumber.phone_number == phone_number).first()
    if existing:
        # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å
        raise HTTPException(status_code=409, detail='Duplicate')
    pn = PhoneNumber(phone_number=phone_number, prefix=prefix, name=name)
    db.add(pn)
    db.commit()
    db.refresh(pn)
    return {'id': pn.id, 'phone_number': pn.phone_number}

@app.delete(
    '/api/v1/phones/{phone_id}',
    summary="–£–¥–∞–ª–∏—Ç—å –Ω–æ–º–µ—Ä",
    description="""
    –£–¥–∞–ª—è–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
    
    **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
    - `phone_id`: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–º–µ—Ä–∞ (–≤ URL)
    - `password`: –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    
    **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
    - `ok`: true, –µ—Å–ª–∏ –Ω–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω
    
    **–û—à–∏–±–∫–∏:**
    - `401`: –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å
    - `404`: –ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
    
    **–ü—Ä–∏–º–µ—Ä:**
    `DELETE /api/v1/phones/123` - —É–¥–∞–ª–∏—Ç—å –Ω–æ–º–µ—Ä —Å ID 123
    """,
    response_description="–†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è",
    response_model=DeleteResponse,
    tags=["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"]
)
def delete_phone(phone_id: int, password: str = Form(...), db: Session = Depends(get_db)):
    if password != ADMIN_PASSWORD:
        raise HTTPException(status_code=401, detail='Unauthorized')
    obj = db.query(PhoneNumber).get(phone_id)
    if not obj:
        raise HTTPException(status_code=404, detail='Not found')
    db.delete(obj)
    db.commit()
    return {'ok': True}

@app.put(
    '/api/v1/phones/{phone_id}',
    summary="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä",
    description="""
    –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    
    **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
    - `phone_id`: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–º–µ—Ä–∞ (–≤ URL)
    - `phone_number`: –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    - `name`: –ù–æ–≤–æ–µ –∏–º—è/–æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    - `password`: –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    
    **–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞:**
    - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: `^\+?[0-9]{10,15}$`
    - –ü—Ä–∏–º–µ—Ä—ã: `+79001234567`, `79001234568`, `+380501234567`
    
    **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
    - `id`: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    - `phone_number`: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    
    **–û—à–∏–±–∫–∏:**
    - `400`: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞
    - `401`: –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å
    - `404`: –ù–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
    
    **–ü—Ä–∏–º–µ—Ä:**
    `PUT /api/v1/phones/123` - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä —Å ID 123
    """,
    response_description="–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
    response_model=PhoneAddResponse,
    tags=["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"]
)
def edit_phone(phone_id: int, phone_number: str = Form(...), name: Optional[str] = Form(None), password: str = Form(...), db: Session = Depends(get_db)):
    if password != ADMIN_PASSWORD:
        raise HTTPException(status_code=401, detail='Unauthorized')
    if not PHONE_RE.match(phone_number):
        raise HTTPException(status_code=400, detail='Invalid phone format')
    pn = db.query(PhoneNumber).get(phone_id)
    if not pn:
        raise HTTPException(status_code=404, detail='Not found')
    pn.phone_number = phone_number
    pn.prefix = extract_prefix(phone_number)
    pn.name = name
    db.commit()
    db.refresh(pn)
    return {'id': pn.id, 'phone_number': pn.phone_number}


# –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def extract_prefix(phone: str) -> str:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ phonenumbers
    """
    try:
        # –ü–∞—Ä—Å–∏–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        parsed_number = phonenumbers.parse(phone, None)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä –≤–∞–ª–∏–¥–Ω—ã–π
        if phonenumbers.is_valid_number(parsed_number):
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +XX
            return f"+{parsed_number.country_code}"
        else:
            # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π, –ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
            if parsed_number.country_code:
                return f"+{parsed_number.country_code}"
            else:
                # Fallback –Ω–∞ —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É
                return extract_prefix_fallback(phone)
                
    except NumberParseException:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        return extract_prefix_fallback(phone)
    except Exception:
        # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ - fallback
        return extract_prefix_fallback(phone)

def extract_prefix_fallback(phone: str) -> str:
    """
    Fallback —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞ (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞)
    """
    m = PREFIX_RE.match(phone)
    if m:
        return m.group(1)
    # fallback ‚Äî –ø–µ—Ä–≤—ã–µ 2 —Å–∏–º–≤–æ–ª–∞
    return phone[:2]
